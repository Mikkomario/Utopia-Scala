package utopia.reflection.event

/**
  * A common trait for events generated by focus changes. Typical sequence of focus events is:<br>
  * - Component A (has focus initially): FocusLeaving (may be denied)<br>
  * - Component B (next component to focus): FocusEntering (may be denied)<br>
  * - Component A: FocusLost<br>
  * - Component B: FocusGained
  * @author Mikko Hilpinen
  * @since 21.10.2020, v2
  */
sealed trait FocusEvent

/**
  * A common trait for events where focus state is actually changed
  */
sealed trait FocusChangeEvent extends FocusEvent

object FocusEvent
{
	/**
	  * An event generated when an object is about to enter into focus
	  */
	case object FocusEntering extends FocusEvent
	
	/**
	  * An event generated when an object has gained focus
	  */
	case object FocusGained extends FocusChangeEvent
	
	/**
	  * An event generated when an object is about to lose focus
	  */
	case object FocusLeaving extends FocusEvent
	
	/**
	  * An event generated when an object has lost focus
	  */
	case object FocusLost extends FocusChangeEvent
}